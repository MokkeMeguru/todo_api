
openapi: 3.0.3
info:
  title: Todo API
  description: A simple Todo API built with Rust and Axum
  version: 1.0.0
  contact:
    name: Todo API Team
    email: api@todo.com
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /tasks:
    get:
      tags:
        - tasks
      summary: Get all tasks
      description: Retrieve a list of all tasks
      responses:
        '200':
          description: List of all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Internal server error
    post:
      tags:
        - tasks
      summary: Create a new task
      description: Create a new task with the provided description
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTask'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Validation error
        '500':
          description: Internal server error
  /tasks/{id}:
    get:
      tags:
        - tasks
      summary: Get a task by ID
      description: Retrieve a specific task by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '500':
          description: Internal server error
    put:
      tags:
        - tasks
      summary: Update a task
      description: Update an existing task
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTask'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Validation error or invalid operation
        '404':
          description: Task not found
        '500':
          description: Internal server error
    delete:
      tags:
        - tasks
      summary: Delete a task
      description: Delete a task by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
        '500':
          description: Internal server error
  /tasks/{id}/complete:
    put:
      tags:
        - tasks
      summary: Mark a task as completed
      description: Mark a task as completed
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task marked as completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '500':
          description: Internal server error
  /tasks/{id}/uncomplete:
    put:
      tags:
        - tasks
      summary: Mark a task as uncompleted
      description: Mark a task as uncompleted
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task marked as uncompleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '500':
          description: Internal server error
  /tasks/completed:
    get:
      tags:
        - tasks
      summary: Get all completed tasks
      description: Retrieve a list of all completed tasks
      responses:
        '200':
          description: List of completed tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Internal server error
  /tasks/pending:
    get:
      tags:
        - tasks
      summary: Get all pending tasks
      description: Retrieve a list of all pending tasks
      responses:
        '200':
          description: List of pending tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Internal server error
  /tasks/search:
    get:
      tags:
        - tasks
      summary: Search tasks by description
      description: Search tasks by description using a query parameter
      parameters:
        - name: q
          in: query
          description: Search query
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Internal server error
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the task
        description:
          type: string
          description: Task description
          maxLength: 1000
        completed:
          type: boolean
          description: Whether the task is completed
        created_at:
          type: string
          format: date-time
          description: When the task was created
        updated_at:
          type: string
          format: date-time
          description: When the task was last updated
      required:
        - id
        - description
        - completed
        - created_at
        - updated_at
    CreateTask:
      type: object
      properties:
        description:
          type: string
          description: Task description
          maxLength: 1000
      required:
        - description
    UpdateTask:
      type: object
      properties:
        description:
          type: string
          description: Task description
          maxLength: 1000
        completed:
          type: boolean
          description: Whether the task is completed
tags:
  - name: tasks
    description: Task management endpoints
